{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\BlogAuth\\\\AdvancedNodeAuth\\\\client\\\\src\\\\components\\\\screens\\\\PrivateScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./PrivateScreen.css\";\n\nconst PrivateScreen = () => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  const [isLoggedin, setIsLoggedin] = useState(true);\n  useEffect(() => {\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        }\n      };\n\n      try {\n        const {\n          data\n        } = await axios.get(\"/api/private\", config);\n        setPrivateData(data.data);\n      } catch (error) {\n        localStorage.removeItem(\"authToken\");\n        setError(\"You are not authorized please login\");\n      }\n    };\n\n    fetchPrivateDate();\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"authToken\");\n    setIsLoggedin(true);\n  };\n\n  return error ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [privateData, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClickCapture: logout,\n      children: \"logout user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateScreen, \"0V2t91wzB/w3wPjrh/yVDQdpPIU=\");\n\n_c = PrivateScreen;\nexport default PrivateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateScreen\");","map":{"version":3,"sources":["E:/BlogAuth/AdvancedNodeAuth/client/src/components/screens/PrivateScreen.js"],"names":["useState","useEffect","axios","PrivateScreen","error","setError","privateData","setPrivateData","isLoggedin","setIsLoggedin","fetchPrivateDate","config","headers","Authorization","localStorage","getItem","data","get","removeItem","logout"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,gBAAgB,GAAG,YAAY;AACnC,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD;AADI,OAAf;;AAOA,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,cAAV,EAA0BN,MAA1B,CAAvB;AACAJ,QAAAA,cAAc,CAACS,IAAI,CAACA,IAAN,CAAd;AACD,OAHD,CAGE,OAAOZ,KAAP,EAAc;AACdU,QAAAA,YAAY,CAACI,UAAb,CAAwB,WAAxB;AACAb,QAAAA,QAAQ,CAAC,qCAAD,CAAR;AACD;AACF,KAfD;;AAiBAK,IAAAA,gBAAgB;AACjB,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMS,MAAM,GAAG,MAAM;AACnBL,IAAAA,YAAY,CAACI,UAAb,CAAwB,WAAxB;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHC;;AAKA,SAAOL,KAAK,gBACV;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,cAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,UADU,gBAGV;AAAA,eAAME,WAAN,eACA;AAAQ,MAAA,cAAc,EAAEa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAtCD;;GAAMhB,a;;KAAAA,a;AAwCN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\n\r\n\r\nconst PrivateScreen = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const [isLoggedin, setIsLoggedin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\"/api/private\", config);\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    setIsLoggedin(true);\r\n};\r\n\r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div>{privateData}\r\n    <button onClickCapture={logout}>logout user</button>\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;\r\n"]},"metadata":{},"sourceType":"module"}