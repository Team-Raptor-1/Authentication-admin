{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./RegisterScreen.css\";\n\nconst RegisterScreen = ({\n  history\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/auth/register\", {\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(RegisterScreen, \"NARYcFT/D+9xv3mzUB5kUKJYsw0=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["E:/BlogAuth/AdvancedNodeAuth/client/src/components/screens/RegisterScreen.js"],"names":["useState","axios","Link","RegisterScreen","history","username","setUsername","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","error","setError","registerHandler","e","preventDefault","config","header","setTimeout","data","post","localStorage","setItem","token","push","response"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,eAAe,GAAG,MAAOC,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AADK,KAAf;;AAMA,QAAIV,QAAQ,KAAKE,eAAjB,EAAkC;AAChCD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGA,aAAOA,QAAQ,CAAC,wBAAD,CAAf;AACD;;AAED,QAAI;AACF,YAAM;AAAEO,QAAAA;AAAF,UAAW,MAAMpB,KAAK,CAACqB,IAAN,CACrB,oBADqB,EAErB;AACEjB,QAAAA,QADF;AAEEE,QAAAA,KAFF;AAGEE,QAAAA;AAHF,OAFqB,EAOrBS,MAPqB,CAAvB;AAUAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,KAAvC;AAEArB,MAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACD,KAdD,CAcE,OAAOb,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACc,QAAN,CAAeN,IAAf,CAAoBR,KAArB,CAAR;AACAO,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAtCD;;AAwCA,sBAEE,qCAFF;AAkED,CAjHD;;GAAMX,c;;KAAAA,c;AAmHN,eAAeA,cAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n    {/* // <div className=\"register-screen\">\r\n    //   <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n    //     <h3 className=\"register-screen__title\">Register</h3>\r\n    //     {error && <span className=\"error-message\">{error}</span>}\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"name\">Username:</label>\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         required\r\n    //         id=\"name\"\r\n    //         placeholder=\"Enter username\"\r\n    //         value={username}\r\n    //         onChange={(e) => setUsername(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"email\">Email:</label>\r\n    //       <input\r\n    //         type=\"email\"\r\n    //         required\r\n    //         id=\"email\"\r\n    //         placeholder=\"Email address\"\r\n    //         value={email}\r\n    //         onChange={(e) => setEmail(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"password\">Password:</label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         required\r\n    //         id=\"password\"\r\n    //         autoComplete=\"true\"\r\n    //         placeholder=\"Enter password\"\r\n    //         value={password}\r\n    //         onChange={(e) => setPassword(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         required\r\n    //         id=\"confirmpassword\"\r\n    //         autoComplete=\"true\"\r\n    //         placeholder=\"Confirm password\"\r\n    //         value={confirmpassword}\r\n    //         onChange={(e) => setConfirmPassword(e.target.value)}\r\n    //       />\r\n    //     </div>\r\n    //     <button type=\"submit\" className=\"btn btn-primary\">\r\n    //       Register\r\n    //     </button>\r\n\r\n    //     <span className=\"register-screen__subtext\">\r\n    //       Already have an account? <Link to=\"/login\">Login</Link>\r\n    //     </span>\r\n    //   </form>\r\n    // </div> */}\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}