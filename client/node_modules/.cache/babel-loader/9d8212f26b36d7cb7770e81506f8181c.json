{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\FastDev\\\\Authentication\\\\client\\\\src\\\\components\\\\screens\\\\settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../settings/Settings.css';\nimport { BiUser } from \"react-icons/bi\";\nimport { BsKeyFill } from \"react-icons/bs\";\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\nconst Settings = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // if (username.trim() === '' || email.trim() === '' || newPassword.trim() === '' || confirmPassword.trim() === '') {\n    //     // setShowPopup(true);\n    //     return;\n    // }\n\n    if (newPassword !== confirmPassword) {\n      // setShowPopup(true);\n      // return;\n      alert(\"Error\");\n    }\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      await axios.put('/api/auth/me/update', {\n        username: username,\n        email: email\n      }, config).then(() => {\n        axios.put('/api/auth/password/update', {\n          oldPassword: oldPassword,\n          newPassword: newPassword,\n          confirmPassword: confirmPassword\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    } // console.log('Old Username:', oldUsername);\n    // console.log('New Username:', newUsername);\n    // console.log('Old Password:', oldPassword);\n    // console.log('New Password:', newPassword);\n    // // updation();\n    // setOldUsername('');\n    // setNewUsername('');\n    // setOldPassword('');\n    // setNewPassword('');\n\n  };\n\n  const updation = () => {\n    Swal.fire({\n      icon: 'success',\n      title: 'Username and Password updated successfully.',\n      showConfirmButton: true\n    });\n  };\n\n  const showError = () => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Please fill all the fields.'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"H1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"H2\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Change Your Username & Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(BiUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 56\n            }, this), \" Username\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pass-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(BsKeyFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 56\n            }, this), \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Old Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: oldPassword,\n            onChange: e => setOldPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"confirm Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-settings\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"inlUkhv5N2rUDZjuw5W4gW+HlGI=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["E:/FastDev/Authentication/client/src/components/screens/settings/Settings.jsx"],"names":["React","useState","BiUser","BsKeyFill","Swal","axios","Settings","username","setUsername","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showPopup","setShowPopup","handleSubmit","event","preventDefault","alert","config","header","put","then","error","console","log","updation","fire","icon","title","showConfirmButton","showError","text","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../settings/Settings.css';\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport { BsKeyFill } from \"react-icons/bs\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nconst Settings = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [showPopup, setShowPopup] = useState(false);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // if (username.trim() === '' || email.trim() === '' || newPassword.trim() === '' || confirmPassword.trim() === '') {\r\n        //     // setShowPopup(true);\r\n        //     return;\r\n        // }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            // setShowPopup(true);\r\n            // return;\r\n            alert(\"Error\")\r\n        }\r\n\r\n        const config = {\r\n            header: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n\r\n            await axios.put('/api/auth/me/update', {\r\n                username: username,\r\n                email: email,\r\n            }, config).then(() => {\r\n\r\n                axios.put('/api/auth/password/update', {\r\n                    oldPassword: oldPassword,\r\n                    newPassword: newPassword,\r\n                    confirmPassword: confirmPassword,\r\n\r\n                })\r\n\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n        // console.log('Old Username:', oldUsername);\r\n        // console.log('New Username:', newUsername);\r\n        // console.log('Old Password:', oldPassword);\r\n        // console.log('New Password:', newPassword);\r\n\r\n        // // updation();\r\n\r\n        // setOldUsername('');\r\n        // setNewUsername('');\r\n        // setOldPassword('');\r\n        // setNewPassword('');\r\n    };\r\n\r\n    const updation = () => {\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Username and Password updated successfully.',\r\n            showConfirmButton: true\r\n          })\r\n    }\r\n\r\n    const showError = () => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'Please fill all the fields.',\r\n          })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App1\">\r\n            <div className='H1'><h1>Hello!</h1></div>\r\n            <div className='H2'><h2>Change Your Username & Password</h2></div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <div className='user-settings'><h4><BiUser/> Username</h4></div>\r\n                    <label>Username </label>\r\n                    <div className='input-settings'>\r\n                        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>Email </label>\r\n                    <div className='input-settings'>\r\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='pass-settings'><h4><BsKeyFill/> Password</h4></div>\r\n                    <label>Old Password </label>\r\n                    <div className='input-settings'>\r\n                        <input type=\"password\" value={oldPassword} onChange={(e) => setOldPassword(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>New Password </label>\r\n                    <div className='input-settings'>\r\n                        <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n                    </div>\r\n\r\n                    <label>confirm Password </label>\r\n                    <div className='input-settings'>\r\n                        <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <button type='submit'>Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}